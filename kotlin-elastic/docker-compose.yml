version: '3.8'
services:
  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.8
    container_name: es01
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es02,es03
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - 9200:9200
    networks:
      - elastic
  es02:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.8
    container_name: es02
    environment:
      - node.name=es02
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es01,es03
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      - elastic
  es03:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.8
    container_name: es03
    environment:
      - node.name=es03
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es01,es02
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      - elastic
  kibana:
    image: docker.elastic.co/kibana/kibana:8.6.1
    container_name: kibana
    ports:
      - 5601:5601
    volumes:
      - ./docker/kibana/kibana.yml:/usr/share/kibana/config/kibana.yml
    #environment:
      #SERVER_NAME: kibana
      #ELASTICSEARCH_HOSTS: '["http://es01:9200","http://es02:9200","http://es03:9200"]'
    networks:
      - elastic
  logstash:
    image: docker.elastic.co/logstash/logstash:7.17.8
    container_name: logstash
    volumes:
      - type: bind
        source: "./docker/logstash/config/logstash.yml"
        target: /usr/share/logstash/config/logstash.yml
        read_only: true
      - type: bind
        source: "./docker/logstash/config/pipelines.yml"
        target: /usr/share/logstash/config/pipelines.yml
        read_only: true
      - type: bind
        source: "./docker/logstash/pipeline"
        target: /usr/share/logstash/pipeline
        read_only: true
      - type: bind
        source: "./docker/logstash//libs/mysql-connector-java-8.0.29.jar"
        target: /usr/share/logstash/jar/mysql-connector-java-8.0.29.jar
        read_only: true
    ports:
      - "5044:5044"
      - "5045:5045"
      - "5001:5001/tcp"
      - "5001:5001/udp"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx512m -Xms512m"
    networks:
      - elastic
  mariadb:
    image: mariadb:latest
    container_name: mariadb
    restart: always
    ports:
      - 3306:3306
    environment:
      MARIADB_ROOT_PASSWORD: passwd
    networks:
      - elastic
networks:
  elastic:
    driver: bridge
